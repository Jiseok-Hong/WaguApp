{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Error.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","Error","text","protoTypes","PropTypes","string","isRequired","Image","props","bgurl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","Helmet","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","term","query","append_to_response","tvApi","HomeContainer","state","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","a","TVPresenter","topRated","airingToday","prototype","array","bool","TVContainer","Header","header","List","ul","Item","li","color","current","SLink","Link","withRouter","pathname","location","Content","Cover","bgImage","Backdrop","Data","h4","InfoContainer","Info","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","erorr","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c27ca486.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(last-child) {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 100px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node)]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  top: 0;\r\n  margin-top: 10px;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  font-size: 30px;\r\n  z-index: 1000;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"lauding\">\r\n      ⏳\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 50vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: #a64452;\r\n  margin-right: 50px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Error = ({ text }) => (\r\n  <Container>\r\n    <Text>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nError.protoTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgurl});\r\n  height: 150px;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  transition: opacity 0.1s ease-in-out; ;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 3px;\r\n  left: 50px;\r\n  opacity: 0;\r\n  color: #f3de02;\r\n  font-weight: 500;\r\n  position: absolute;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.4;\r\n    }\r\n    ${Rating} {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(250, 250, 250, 0.75);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image bgurl={`https://image.tmdb.org/t/p/w300${imageUrl}`}></Image>\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ♥\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 15)} ...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  imageUrl: PropTypes.string.isRequired,\r\n  id: PropTypes.number,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  top: 50px;\r\n  z-index: 1;\r\n  overflow: auto;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <Helmet>\r\n        <title>WAGU MOVIES</title>\r\n      </Helmet>\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Error text={error} />}\r\n      </Container>\r\n    </>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"f524d04678f2d0adde4a287f48edb79e\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  upcoming: () => api.get(\"movie/popular\"),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    }),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    popular: null,\r\n    upcoming: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        popular,\r\n        upcoming,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"OOPS! NOT FOUND\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, popular, upcoming, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Helmet from \"react-helmet\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: flex;\r\n  all: unset;\r\n  font-size: 23px;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-bottom: medium dashed green;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>WAGU SEARCH</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies and TV Shows here\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Shows\">\r\n              {tvResults.map((tv) => (\r\n                <Poster\r\n                  key={tv.id}\r\n                  id={tv.id}\r\n                  title={tv.original_name}\r\n                  imageUrl={tv.poster_path}\r\n                  rating={tv.vote_average}\r\n                  year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n        </>\r\n      )}\r\n    </Form>\r\n    {error && <Error text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      movieResults.length === 0 &&\r\n      tvResults.length === 0 && <Error text=\"Not Found\" />}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    //console.log(value);\r\n    this.setState({ searchTerm: value });\r\n  };\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      //console.log(searchTerm);\r\n      //throw Error();\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Not Found\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <Helmet>\r\n        <title>WAGU TV</title>\r\n      </Helmet>\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated TV Shows\">\r\n            {topRated.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular TV Shows\">\r\n            {popular.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"On Air TV Shows\">\r\n            {airingToday.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Error text={error} />}\r\n      </Container>\r\n    </>\r\n  );\r\nTVPresenter.prototype = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({ error: \"OOPs! NOT FOUND\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  background-color: rgba(20, 20, 20, 0.9);\r\n  background-size: cover;\r\n  z-index: 1000;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  background-color: ${(color) => (color.current ? \"#585858\" : \"transparent\")};\r\n  transition: background-color 0.3s ease-in-out;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: absolute;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  position: relative;\r\n  height: 90%;\r\n  z-index: 1;\r\n  left: 100px;\r\n  top: 20px;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.2;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  font-size: 33px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst Info = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 15px;\r\n  line-height: 2;\r\n  width: 80%;\r\n  opacity: 0.8;\r\n  font-style: italic;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Wagu{\" \"}\r\n          {result.original_title\r\n            ? `Movie ${result.original_title}`\r\n            : `TV ${result.original_name}`}\r\n        </title>\r\n      </Helmet>\r\n      <Container>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`}\r\n          />\r\n          <Data>\r\n            <Title>\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            <InfoContainer>\r\n              <Info>\r\n                {result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)}\r\n              </Info>\r\n              <Divider>•</Divider>\r\n              <Info>\r\n                {result.runtime ? result.runtime : result.episode_run_time} min\r\n              </Info>\r\n              <Divider>•</Divider>\r\n              <Info>\r\n                {result.genres &&\r\n                  result.genres.map((genres, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genres.name\r\n                      : `${genres.name} / `\r\n                  )}\r\n              </Info>\r\n            </InfoContainer>\r\n            <Overview>{result.overview}</Overview>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    </>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import DetailPresenter from \"./DetailPresenter\";\r\nimport React from \"react\";\r\nimport { tvApi, movieApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const parsedId = parseInt(id);\r\n    const { isMovie } = this.state;\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.tvDetail(parsedId));\r\n      }\r\n      console.log(result);\r\n    } catch {\r\n      this.setState({ erorr: \"OOPs NOT FOUND\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/tv\" component={TV} />\r\n      <Route path=\"/search\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/show/:id\" component={Detail} />*\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n        font-size:12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color: white;\r\n        padding-top: 50px;\r\n        \r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}